(()=>{const e="media-cache-v1";self.addEventListener("push",function(e){console.log("Received push event:",e);const{title:t,body:n,url:i}=JSON.parse(e.data.text());if(e.data){const c={body:n,icon:"/icon.png",vibrate:[100,50,100],data:{url:i,dateOfArrival:Date.now(),primaryKey:"2"}};e.waitUntil(self.registration.showNotification(t,c))}}),self.addEventListener("notificationclick",async e=>{e.notification.close(),console.log(e.notification.data.url);const t=e.notification.data.url||"/";e.waitUntil(clients.matchAll({type:"window"}).then(e=>{for(const n of e)if(n.url===t&&"focus"in n)return n.focus();if(clients.openWindow)return clients.openWindow(t)}))}),self.addEventListener("install",t=>{t.waitUntil(caches.open(e).then(e=>(console.log("[Service Worker] Caching essential files"),e.addAll(["/","/offline.html"]))))}),self.addEventListener("activate",t=>{const n=[e];t.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(!n.includes(e))return console.log("[Service Worker] Deleting old cache",e),caches.delete(e)}))))}),self.addEventListener("fetch",t=>{t.respondWith(caches.match(t.request).then(n=>n||fetch(t.request).then(n=>(t.request.url.includes("/media/")&&caches.open(e).then(e=>{e.put(t.request,n.clone())}),n))).catch(()=>caches.match("/offline.html")))})})();